<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>cn</groupId>
    <artifactId>myBook</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>testCode</name>
    <description>testCode</description>
    <properties>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>

        <!-- 基础 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--End 基础 -->

        <!-- 基础工具包 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>30.1-jre</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.16</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.11</version>
        </dependency>

        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>3.0.3</version>
        </dependency>
        <!-- todo:只用到 YML 配置文件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- resilience4j 信号量隔离 -->
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring-boot2</artifactId>
            <version>1.7.0</version>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>io.github.resilience4j</groupId>-->
        <!--            <artifactId>resilience4j-bulkhead</artifactId>-->
        <!--            <version>1.7.0</version>-->
        <!--        </dependency>-->
        <!-- REDIS -->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- MYSQL -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>


        <!-- okhttp3/okhttp 回调用户网址 -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.9.1</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>4.9.1</version>
        </dependency>

        <!--End 基础工具包 -->

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>1.1.2.RELEASE</version>
        </dependency>

        <!-- 支撑-->
        <!-- 健康检查 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <!--End 健康检查 -->
        <!-- API -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>3.0.0</version>
        </dependency>
        <!--End API -->
        <!-- aop -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.aspectj</groupId>-->
        <!--            <artifactId>aspectjweaver</artifactId>-->
        <!--            <version>1.9.6</version>-->
        <!--        </dependency>-->
        <!--End 支撑-->

        <!-- 测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- 排斥此包，使用Junit 4 -->
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 并发测试工具包 必须使用Junit 4-->
        <dependency>
            <groupId>org.databene</groupId>
            <artifactId>contiperf</artifactId>
            <version>2.3.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.11.2</version>
        </dependency>
        <!-- await -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.9</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org/jaudiotagger -->
        <dependency>
            <groupId>org</groupId>
            <artifactId>jaudiotagger</artifactId>
            <version>2.0.3</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--            &lt;!&ndash;            此插件生成ASCIIDOC&ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <groupId>io.github.swagger2markup</groupId>-->
            <!--                <artifactId>swagger2markup-maven-plugin</artifactId>-->
            <!--                <version>1.3.3</version>-->
            <!--                <dependencies>-->
            <!--                    <dependency>-->
            <!--                        <groupId>io.github.swagger2markup</groupId>-->
            <!--                        <artifactId>swagger2markup</artifactId>-->
            <!--                        <version>1.3.3</version>-->
            <!--                    </dependency>-->
            <!--                </dependencies>-->
            <!--                <configuration>-->
            <!--                    &lt;!&ndash;此处端口一定要是当前项目启动所用的端口&ndash;&gt;-->
            <!--                    <swaggerInput>http://localhost:8080/v2/api-docs</swaggerInput>-->
            <!--                    <outputDir>src/docs/asciidoc/generated</outputDir>-->
            <!--                    <config>-->
            <!--                        &lt;!&ndash; 除了ASCIIDOC之外，还有MARKDOWN和CONFLUENCE_MARKUP可选 &ndash;&gt;-->
            <!--                        <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>-->
            <!--                    </config>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
            <!--            &lt;!&ndash;            此插件生成HTML和PDF&ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <groupId>org.asciidoctor</groupId>-->
            <!--                <artifactId>asciidoctor-maven-plugin</artifactId>-->
            <!--                <version>1.5.3</version>-->
            <!--                &lt;!&ndash; Include Asciidoctor PDF for pdf generation &ndash;&gt;-->
            <!--                <dependencies>-->
            <!--                    <dependency>-->
            <!--                        <groupId>org.asciidoctor</groupId>-->
            <!--                        <artifactId>asciidoctorj-pdf</artifactId>-->
            <!--                        <version>1.5.4</version>-->
            <!--                    </dependency>-->
            <!--                    <dependency>-->
            <!--                        <groupId>org.jruby</groupId>-->
            <!--                        <artifactId>jruby-complete</artifactId>-->
            <!--                        <version>9.2.15.0</version>-->
            <!--                    </dependency>-->
            <!--                </dependencies>-->
            <!--                &lt;!&ndash; Configure generic document generation settings &ndash;&gt;-->
            <!--                <configuration>-->
            <!--                    <sourceDirectory>src/docs/asciidoc/generated</sourceDirectory>-->
            <!--                    &lt;!&ndash;                    <sourceHighlighter>coderay</sourceHighlighter>&ndash;&gt;-->
            <!--                    <attributes>-->
            <!--                        <toc>left</toc>-->
            <!--                    </attributes>-->
            <!--                </configuration>-->
            <!--                &lt;!&ndash; Since each execution can only handle one backend, run-->
            <!--                     separate executions for each desired output type &ndash;&gt;-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>output-html</id>-->
            <!--                        <phase>generate-resources</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>process-asciidoc</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <backend>html5</backend>-->
            <!--                            <outputDirectory>src/docs/asciidoc/html</outputDirectory>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->

            <!--                    <execution>-->
            <!--                        <id>output-pdf</id>-->
            <!--                        <phase>generate-resources</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>process-asciidoc</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <backend>pdf</backend>-->
            <!--                            <outputDirectory>src/docs/asciidoc/pdf</outputDirectory>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->

            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>
</project>
